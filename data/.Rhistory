A
A <- c("Hello World!")
A
A <- ("Hello World!")
A
install.packages("DESeq2")
RStudio
version
require("installr")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
require("DESeq2")
version
version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
warnings()
setwd("")
setwd("C:\\annatoussaint\\repos\\me\\R-scripts)
setwd("")
setwd("C:\\annatoussaint\\repos\\me\\R-scriptss)
setwd("")
setwd("C:\\annatoussaint\\repos\\me\\R-scripts)
Tutorial_RNA_seq
setwd("")
setwd(~\repos\me\R-scripts)
setwd("")
setwd(~\\repos\\me\\R-scripts)
setwd("")
setwd("~\\repos\\me\\R-scripts")
setwd("")
setwd("C:\\repos\\me\\R-scripts")
wd
getwd()
getwd()
setwd("")
setwd(/home/annatoussaint/repos/me/R-scripts")
setwd("")
setwd(//home//annatoussaint//repos//me//R-scripts")
setwd("")
setwd(/~/annatoussaint/repos/me/R-scripts")
getwd()
setwd("")
setwd("/home/annatoussaint")
setwd("/home/annatoussaint")
setwd("~/repos/me/R-scripts")
require("DESeq2")
Tutorial_RNA_seq
setwd("~/repos/me/R-scripts")
setwd("~/repos/me/R-scripts")
setwd("~\\repos\\me\\R-scripts")
setwd("~/repos/me/R-scripts")
just.raw.counts = read.delim("Raw_counts_input.txt")
setwd("~/repos/me/R-scripts/data")
just.raw.counts = read.delim("Raw_counts_input.txt")
head(just.raw.counts)
dim(just.raw.counts)
just.raw.counts = read.delim("Raw_counts_input.txt" , row.names = 1)
head(just.raw.counts)
dim(just.raw.counts)
just.raw.counts = read.delim("Raw_counts_input.txt")
head(just.raw.counts)
dim(just.raw.counts)
just.raw.counts = read.delim("Raw_counts_input.txt" , row.names = 1)
head(just.raw.counts)
dim(just.raw.counts)
meta.data = read.delim(file = "meta_data.txt", row.names = 1)
head(meta.data)
count.data.set <- DESeqDataSetFromMatrix(countData=just.raw.counts, colData = meta.data,
design = ~ condition)
count.data.set.object <- DESeq(count.data.set)
require("DESeq2")
remove.packages("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
install.packages("bioCLite")
install.packages("RCurl")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
warning()
setwd("~/repos/me/R-scripts/data")
just.raw.counts = read.delim("Raw_counts_input.txt")
head(just.raw.counts)
dim(just.raw.counts)
just.raw.counts = read.delim("Raw_counts_input.txt" , row.names = 1)
head(just.raw.counts)
dim(just.raw.counts)
meta.data = read.delim(file = "meta_data.txt", row.names = 1)
head(meta.data)
count.data.set <- DESeqDataSetFromMatrix(countData=just.raw.counts, colData = meta.data,
design = ~ condition)
count.data.set.object <- DESeq(count.data.set)
if (!requireNamespace("BiocManager", quietly = TRUE))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2", version = "3.8")
BiocManager::install("DESeq2", version = "3.14")
force = TRUE
update.packages(nlme)
update.packages("nlme")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2", version = "3.14")
BiocManager::install("DESeq2", version = "3.14", force=TRUE)
require("DESeq2")
Tutorial_RNA_seq
setwd("~/repos/me/R-scripts/data")
just.raw.counts = read.delim("Raw_counts_input.txt")
head(just.raw.counts)
dim(just.raw.counts)
just.raw.counts = read.delim("Raw_counts_input.txt" , row.names = 1)
head(just.raw.counts)
dim(just.raw.counts)
meta.data = read.delim(file = "meta_data.txt", row.names = 1)
head(meta.data)
count.data.set <- DESeqDataSetFromMatrix(countData=just.raw.counts, colData = meta.data,
design = ~ condition)
count.data.set.object <- DESeq(count.data.set)
vsd <-vst(count.data.set.object)
norm.data = assay(vsd)
head(norm.data)
Tutorial_RNA_seq
setwd("~/repos/me/R-scripts/data")
just.raw.counts = read.delim("Raw_counts_input.txt")
head(just.raw.counts)
dim(just.raw.counts)
just.raw.counts = read.delim("Raw_counts_input.txt" , row.names = 1)
head(just.raw.counts)
dim(just.raw.counts)
meta.data = read.delim(file = "meta_data.txt", row.names = 1)
head(meta.data)
count.data.set <- DESeqDataSetFromMatrix(countData=just.raw.counts, colData = meta.data,
design = ~ condition)
count.data.set.object <- DESeq(count.data.set)
vsd <-vst(count.data.set.object)
#or, we can use
#rld <-rlog(count.data.set.object)
norm.data = assay(vsd)
head(norm.data)
write.table(norm.data, sep="\t",file="Norm_data_all_genes_NO_counts_cut_off.txt"
, row.names=TRUE,col.names=NA,quote=FALSE)
sampleDists <- dist(t(norm.data),  method = "euclidean")
reversed_rows_columns = (t(norm.data))
reversed_rows_columns[1:5,1:5]
sampleDists
clusters=hclust(sampleDists)
plot(clusters)
plotPCA(vsd, intgroup=c("condition"))
require(ggplot2)
plotPCA(vsd, intgroup=c("condition")) +
scale_colour_hue(breaks = c("E14.5","E14.5","Neonatal","Neonatal","Adult",
"Adult","TAC","TAC"))
install.packages("RSubGenes", "annotables")
install.packages("Rsubread")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", version = "3.14", force=TRUE)
BiocManager::install("Rsubread" , version = 3.14)
warning()
BiocManager::install("annotables")
warning()
library(Rsubread)
ref <- system.file("extdata", "reference.fa" , package="Rsubread")
buildindex(basename="reference_index", reference = ref)
setwd("~/repos/me/R-scripts/data")
library(Rsubread)
#ref <- system.file("extdata", "reference.fa" , package="Rsubread")
#buildindex(basename="reference_index", reference = ref)
ref <- "~/repos/me/R-scripts/data/human_g1k_v37.fasta.fai"
newreads <- "~/repos/me/R-scripts/data/SRR17281363_2.fastq"
#align reads to reference
align.stat <- align(index = "ref",
readfile1 = newreads,
output_file = "alignResults.BAM",
phredOffset = 64)
ref <- "~/repos/me/R-scripts/data/human_g1k_v37.fasta.fai"
newreads <- "~/repos/me/R-scripts/data/SRR17281363_2.fastq"
#align reads to reference
align.stat <- align(index = ref,
readfile1 = newreads,
output_file = "alignResults.BAM",
phredOffset = 64)
library(Rsubread)
ref <- system.file("extdata", "reference.fa" , package="Rsubread")
buildindex(basename="reference_index", reference = ref)
#align reads to reference
align.stat <- align(index = "reference_index",
readfile1 = newreads,
output_file = "alignResults.BAM",
phredOffset = 64)
library(Rsubread)
ref <- system.file("extdata", "reference.fa" , package="Rsubread")
buildindex(basename="reference_index", reference = ref)
#align reads to reference
align.stat <- align(index = "reference_index",
readfile1 = reads,
output_file = "alignResults.BAM",
phredOffset = 64)
library(Rsubread)
ref <- system.file("extdata", "reference.fa" , package="Rsubread")
buildindex(basename="reference_index", reference = ref)
reads <- system.file("extdata", "reads.txt.gz", package="Rsubread")
#align reads to reference
align.stat <- align(index = "reference_index",
readfile1 = reads,
output_file = "alignResults.BAM",
phredOffset = 64)
reads1 <- system.file("extdata","reads1.txt.gz" , package="Rsubread")
reads2 <- system.file("extdata", "reads2.txt.gz", package="Rsubread")
align.stat2 <- align(index = "reference_index", readfile1 = reads1, readfile2 =
reads2, output_file = "alignresultsPE.BAM", phredOffset =
64)
View(align.stat)
ann <- data.frame(
GeneID=c("gene1","gene1","gene2","gene2"),
Chr="chr_dummy",
Start=c(100, 1000, 3000, 5000),
End=c(500, 1800, 4000, 5500),
Strand=c("+","+","-","-"),
stringsAsFactors = FALSE)
ann
fc_SE <- featureCounts("alignResults.BAM", annot.ext = ann)
fc_SE
View(fc_SE)
View(fc_SE)
fc_SE$counts
#feature column
fc_SE <- featureCounts("alignResults.BAM", annot.ext = ann)
fc_SE$counts
fc_PE <- featureCounts("alignResultsPE.BAM", annot.ext = ann, isPairedEnd = TRUE)
fc_PE
#feature column
fc_SE <- featureCounts("alignResults.BAM", annot.ext = ann)
fc_SE$counts
fc_PE <- featureCounts("alignresultsPE.BAM", annot.ext = ann, isPairedEnd = TRUE)
fc_PE
#using library data
library("parathyroidSE")
data("parathyroidGenesSE")
library(DESeq2)
#create a count matrix for contrast
dummy_cm <- cbind(fc_SE$counts.fc_PE$counts)
colnames(dummy_cm) <-c("Sample1","Sample2")
countmatrix <- assay(parathyroidGenesSE)
library("parathyroidSE")
BiocManager::install("parathyroidGenesSE")
BiocManager::install("parathyroidGenesSE", version = 3.14)
BiocManager::install("parathyroidGenesSE", force = TRUE)
BiocManager::install("parathyroidGenesSE")
warning()
library("parathyroidSE")
data("parathyroidGenesSE")
library(DESeq2)
#create a count matrix for contrast
dummy_cm <- cbind(fc_SE$counts.fc_PE$counts)
colnames(dummy_cm) <-c("Sample1","Sample2")
countmatrix <- assay(parathyroidGenesSE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", version = "3.14", force=TRUE)
BiocManager::install("parathyroidGenesSE")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", version = "3.14", force=TRUE)
BiocManager::install("parathyroidGenesSE", version = "3.14")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", version = "3.14", force=TRUE)
BiocManager::install("parathyroidGenesSE", version = "3.14", force = TRUE)
BiocManager::install("Rsubread" , version = 3.14)
data("parathyroidGenesSE")
library("parathyroidSE")
install.packages("parathyroidGenesSE")
install.packages("parathyroidGenesSE", version = 3.14)
setRepositories(CRAN)
setRepositories(ind = c(1:6, 8))
install.packages("parathyroidGenesSE", version = 3.14)
install.packages("parathyroidGenesSE", dependencies = TRUE)
install.packages("parathyroidGenesSE", dependencies = TRUE)
BiocManager::install("parathyroidSE")
